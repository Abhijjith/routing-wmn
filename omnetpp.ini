[General]
# L. Jacob Mariscal Fern√°ndez 2014
# This file is distributed WITHOUT ANY WARRANTY. See the file
# 'license' for details on this and other legal matters.
#debug-on-errors = true
#record-eventlog = true
#eventlog-message-detail-pattern = Packet:declaredOn(Packet) or bitLength
#eventlog-message-detail-pattern = *

[Config Base]

repeat = 20 # 20 samples of simulation
sim-time-limit = 120s #2 minutes of simulation - default 120 seconds
network = networks.WmnStats

**.coefPh= 0.73 # default 0.7
**.dataCoef= default #default 16 ; data packets spreading routing coeficient
**.height= default # default is 0
**.width = default # default is 0
**.numNodes = default # default is 9;  usually height*width + 9 (default) 
# checking cases:0x0+9; 9x10+9, 14x14+9=205, 18x17+9=315, 20x20+9=409 

**.maxArray = default # min hops are 4,3 in Base (9nodes) , 19 (99) , 28 (205), 35(315), 40 (409) 49 default
**.aplicacionTipo = "AppUDP"
**.transporteTipo = "UDPtrans"
**.destAddresses = "7" # always node X (mobile phone) 
**.srcAddresses = "8" # for 9 nodes use address 8, for more use 11 (furthest paths)
**.packetLength = 64 bytes
**.ap*.enlace[*].frameCapacity = 99 # AP have bigger capacity (default 14)

**.sort = default # 1: static 2: AntWMNet 3: CPANT 4: AODV ; default AntWMNet
**.mobile = true  # default false
**.rTableInit = false # default true
**.metrics= 3 # 1: time 2: hops 3: both ; default time
**.flooding= true # default unassigned, put here always a value
**.setupTime = 0s #no setup time in most samples
**.sendIaTime= 0.25s # time between data packets, default : exponential (1s);
						# usual (0.25) try:0.5 0.25 0.1666666 0.125 0.1 0.083333

**.goodDiffusion = default # Define if use good diffusion (of best estimation hops) , default true
**.cutRange = default # select criteria of cutting reactive FA relative to hops estimation , default 1
		# 0: always , 1: if worst or equal than shortest 2: only if worst (longer) 
**.cutRangePro = default # 1 select criteria of cutting local repair or proactive FA relative to hops estimation , default 1
		# 0: always , 1: if worst or equal than shortest 2: only if worst (longer)
#**.stochastic= false # default true; define if stochastic is selected
**.evaporation = false #AntWMNet evaporation issue for probability routing table values
**.sendFaTime = 0.02s # if no flooding better lower 10 times than sendIaTime, default exponential(1s)
**.updateVTime = default # 10ms generate too much FA traffic , default 0s disabled option
**.helloTime =  default # time interval for hello packets kind = 1, default 1seg
**.hopTime = default # default 20 ms
**.maxLocalRepairFlooding = default # AntWMNet default 3
**.proBa = default # AntWMNet default true ; active Proactive BA
**.checkTime = 20.97s # AntWMNet, time interval to check routes; default 21 seconds, interesting 105s, better 20.97
**.alternateCheck = default # AntWMNet, (default is on) active alternate launching 
			    # of Proactive BA from destination (1st) and source
#**.headerCost = 2 # defalult 1 ; 1: minimal cost, 2: add pheromone diffusion cost 
					# ; disabled, better always calculate both ways

**.take1stPath = false # AntWMNet and AODV option (usually true in most AODV adaptions, false in AntWMNet)
**.replyTime = 0.11s # AODV, AntWMNet waiting interval for local repairing check; default 0,33seg 
					# optimal 0,11 with 99nodos in AODV

**.localRepair= default # AODV option, local repairing on node error, default false
**.sendFirstRREQ = default # AODV default 0,03s

[Config KliKle]

repeat = 20 # 20 samples
sim-time-limit = 120s #2 minutes of simulation
network = networks.KliKle
#**.coefPh=0.73

**.numNodes=2
**.aplicacionTipo = "AppUDP"
**.transporteTipo = "UDPtrans"
**.destAddresses = "2" 
**.srcAddresses = "3"
**.packetLength = 64 bytes

**.take1stPath = default # AntWMNet and AODV option (usually true in most AODV adaptions)
#**.evaporation = true #AntWMNet evaporation issue for probability routing table values
**.mobile = default # default false
**.rTableInit = false
**.sort = 1 # 1: static 2: AntWMNet 3: CPANT 4: AODV ; default AntWMNet
**.metrics=2  # 1: time 2: hops 3: both
**.flooding= true
**.setupTime = 0s   # not neccesary when flooding activated
**.sendIaTime= 0.25s # time between packets, default : exponetial (1s)
**.sendFaTime = 0.02s # if no flooding better lower 10 times than sendIaTime

[Config Static]
repeat = 20 # 20 samples of simulation
sim-time-limit = 120s #2 minutes of simulation - default 120 seconds
network = networks.WmnStatic

**.height= default # default is 0
**.width = default # default is 0
**.numNodes = default # default is 9;  usually height*width + 9 (default) 
# checking cases:0x0+9; 9x10+9, 14x14+9=205, 18x17+9=315, 20x20+9=409 
**.aplicacionTipo = "AppUDP"
**.transporteTipo = "UDPtrans"
**.destAddresses = "7" # always node X (mobile phone) 
**.srcAddresses = "8" # for 9 nodes use address 8, for more use 11 (furthest paths)
**.packetLength = 64 bytes

**.sort = 1 # default # 1: static 2: AntWMNet 3: CPANT 4: AODV ; default AntWMNet
**.flooding = false # no sense for static routing
**.mobile = true # default # static routing works terrible in mobility scenario, default false


**.setupTime = 0s #no setup time in most samples
**.sendIaTime= 0.25s # time between data packets, default : exponential (1s);
						# usual (0.25) try:0.5 0.25 0.1666666 0.125 0.1 0.083333

[Config Stats]

repeat = 20 # 20 samples of simulation
sim-time-limit = 120s #2 minutes of simulation - default 120 seconds
network = networks.WmnStats

**.coefPh= 0.73 # default 0.7
**.dataCoef= default #default 16 ; data packets spreading routing coeficient
**.height= default # default is 0
**.width = default # default is 0
**.numNodes = default # default is 9;  usually height*width + 9 (default) 
# checking cases:0x0+9; 9x10+9, 14x14+9=205, 18x17+9=315, 20x20+9=409 

**.maxArray = default # min hops are 4,3 in Base (9nodes) , 19 (99) , 28 (205), 35(315), 40 (409) 49 default
**.aplicacionTipo = "AppUDP"
**.transporteTipo = "UDPtrans"
**.destAddresses = "7" # always node X (mobile phone) 
**.srcAddresses = "8" # for 9 nodes use address 8, for more use 11 (furthest paths)
**.packetLength = 64 bytes
**.ap*.enlace[*].frameCapacity = 99 # AP have bigger capacity (default 14)

**.sort = 4 #default # 1: static 2: AntWMNet 3: CPANT 4: AODV ; default AntWMNet
**.mobile = true  # default false
**.rTableInit = false # default true
**.metrics= 3 # 1: time 2: hops 3: both ; default time
**.flooding= true # default unassigned, put here always a value
**.setupTime = 0s #no setup time in most samples
**.sendIaTime= 0.25s # time between data packets, default : exponential (1s);
						# usual (0.25) try:0.5 0.25 0.1666666 0.125 0.1 0.083333

**.goodDiffusion = default # Define if use good diffusion (of best estimation hops) , default true
**.cutRange = default # select criteria of cutting reactive FA relative to hops estimation , default 1
		# 0: always , 1: if worst or equal than shortest 2: only if worst (longer) 
**.cutRangePro = default # 1 select criteria of cutting local repair or proactive FA relative to hops estimation , default 1
		# 0: always , 1: if worst or equal than shortest 2: only if worst (longer)
#**.stochastic= false # default true; define if stochastic is selected
**.evaporation = false #AntWMNet evaporation issue for probability routing table values
**.sendFaTime = 0.02s # if no flooding better lower 10 times than sendIaTime, default exponential(1s)
**.updateVTime = default # 10ms generate too much FA traffic , default 0s disabled option
**.helloTime =  default # time interval for hello packets kind = 1, default 1seg
**.hopTime = default # default 20 ms
**.maxLocalRepairFlooding = default # AntWMNet default 3
**.proBa = default # AntWMNet default true ; active Proactive BA
**.checkTime = 20.97s # AntWMNet, time interval to check routes; default 21 seconds, interesting 105s, better 20.97
**.alternateCheck = default # AntWMNet, (default is on) active alternate launching 
			    # of Proactive BA from destination (1st) and source
#**.headerCost = 2 # defalult 1 ; 1: minimal cost, 2: add pheromone diffusion cost 
					# ; disabled, better always calculate both ways

**.take1stPath = false # AntWMNet and AODV option (usually true in most AODV adaptions, false in AntWMNet)
**.replyTime = 0.11s # AODV, AntWMNet waiting interval for local repairing check; default 0,33seg 
					# optimal 0,11 with 99nodos in AODV

**.localRepair= default # AODV option, local repairing on node error, default false
**.sendFirstRREQ = default # AODV default 0,03s

